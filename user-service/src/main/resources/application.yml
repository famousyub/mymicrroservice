server:
  port: 0

eureka:
  instance:
    #spring cloud 호스트 이름(ip), spring application 의 인스턴스 id 값, 포트를 랜덤하게 지정
   instance-id: ${spring.cloud.client.hostname}:${spring.application.instance_id:${random.value}}
  client:
    #eureka 서버에 등록 가능 설정
    register-with-eureka: true
    #외부 에서 검색 가능한 형태로 만듬
    fetch-registry: true
    #eureka 서버의 위치 폴더를 지정
    service-url:
      #eureka 라는 엔드포인트에 현재 마이크로서비스를 등록
      defaultZone: http://127.0.0.1:8761/eureka

greeting:
  message: E-commerce 에 오신걸 환영합니다.

spring:
  application:
    name: user-service

  datasource:
    driver-class-name: org.h2.Driver
    username: sa
    password:
    url: jdbc:h2:tcp://localhost/~/test;
  h2:
    console:
      settings:
        web-allow-others: true
      path: /h2-console

  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        #show_sql: true   //운영할 때는 system.out로 sql를 보여주기때문에 쓰지 말아야한다
        format_sql: true  //sql 이쁘게 보이게
        default_batch_fetch_size: 100


#jwt:
#  secretKey : mircoservicesJwtTestSecretKeyWithSpringCloud
#  #1h
#  accessToken-valid-seconds : 600
#  #24h
#  refreshToken-valid-seconds : 86400

  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest

management:
  endpoints:
    web:
      exposure:
        include: refresh,health,beans,httptrace,busrefresh

#feign client Log
logging:
  level:
    com.msa.userservice.client: DEBUG
